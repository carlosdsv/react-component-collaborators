{"version":3,"sources":["../../src/CollaboratorsList/CollaboratorsList.tsx","../../src/StyleComponents/ListStyle.tsx","../../src/StyleComponents/CardsStyle.tsx","../../src/Cards/CardComplete.tsx","../../src/Cards/CardMinimal.tsx","style/TypeCardStyle.tsx","mock/collaboratorsArray.tsx","style/ComponentContainerStyle.tsx","style/CardStyle.tsx","style/CodeSnippetTyle.tsx","App.tsx","index.tsx"],"names":["CollaboratorsList","listStyleObject","collaboratorsArray","children","ListContainerDiv","styled","listWidth","listHeight","direction","listBackgroundColor","collaboratorObj","ContainerDivStyle","cardWidth","cardHeight","cardBackgroundColor","imagePosition","borderCard","TitlePStyle","textAlign","titleColor","fontSizeTitle","paddingTitle","marginTitle","ImgDivStyle","ImgStyle","imageFormat","imageWidth","imageHeight","borderImage","CardComplete","cardStyleObject","ContainerDiv","TextDiv","TitleP","DescriptionP","descriptionColor","fontSizeDescription","paddingDescription","marginDescription","ImgDiv","Img","src","image","alt","React","CardMinimal","title","description","AppDiv","div","AppTitleDiv","ComponentDisplayDiv","CustomizationDiv","CardTypeContainerDiv","P","p","CardTypeButtonDiv","Button","button","SizeInput","input","FlexRowDiv","ComponentDiv","ColorTextInput","ColorInput","CardDiv","CardSizeInput","LongInput","Hr","hr","CodeSnippetDiv","SnippetDiv","CodeDiv","Code","code","width","style","color","App","useState","cardComponent","setCardComponent","setImagePosition","setListStyleObject","setCardStyleObject","basicStructureSnippet","imagePositionSnippet","listStyleObjectSnippet","cardStyleObjectSnippet","handleImagePosition","e","currentTarget","value","handleListBackgroundColor","target","handleDirection","handleTextAlign","handleCardBackgroundColor","handleImageFormat","handleTitleColor","handleDescriptionColor","handleBorderCardStyle","handleBorderCardColor","handleBorderImageStyle","handleBorderImageColor","type","onClick","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2e355c.chunk.js","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport { collaborator, listStyleObjectI } from '../interfaces'\nimport { ListContainerDivStyle } from '../StyleComponents/ListStyle'\n\ninterface ICollaboratorsListProps {\n  collaboratorsArray: collaborator[]\n  listStyleObject: listStyleObjectI\n  children: JSX.Element\n}\n\nconst CollaboratorsList: React.FC<ICollaboratorsListProps> = ({\n  listStyleObject,\n  collaboratorsArray,\n  children\n}) => {\n  const ListContainerDiv = styled.div`\n    ${ListContainerDivStyle(\n      listStyleObject.listWidth,\n      listStyleObject.listHeight,\n      listStyleObject.direction,\n      listStyleObject.listBackgroundColor\n    )}\n  `\n  return (\n    <ListContainerDiv>\n      {collaboratorsArray.map((collaboratorObj: collaborator) =>\n        React.cloneElement(children, { collaboratorObj: collaboratorObj })\n      )}\n    </ListContainerDiv>\n  )\n}\n\nexport default CollaboratorsList\n","export const ListContainerDivStyle = (\n  listWidth: string = '1100px',\n  listHeight: string = '400px',\n  direction: string = 'vertical',\n  listBackgroundColor: string = '#FFF'\n) => {\n  return `\n  width: ${listWidth};\n  height: ${listHeight};\n  background-color: ${listBackgroundColor};\n  overflow: scroll;\n  display: flex;\n  flex-direction: ${\n    direction === 'vertical'\n      ? 'row'\n      : direction === 'horizontal'\n      ? 'column'\n      : 'row'\n  };\n  flex-wrap: wrap;\n  overflow-x: ${\n    direction === 'none'\n      ? 'hidden'\n      : direction === 'vertical'\n      ? 'hidden'\n      : direction === 'horizontal'\n      ? 'scroll'\n      : 'scroll'\n  };\n  overflow-y: ${\n    direction === 'none'\n      ? 'hidden'\n      : direction === 'vertical'\n      ? 'scroll'\n      : direction === 'horizontal'\n      ? 'hidden'\n      : 'scroll'\n  };\n  `\n}\n","// eslint-disable-next-line no-unused-vars\nimport { borderI } from '../interfaces'\n\nexport const ContainerDivStyle = (\n  cardWidth: string = '300px',\n  cardHeight: string = '150px',\n  borderCard: borderI,\n  cardBackgroundColor: string = '#7EE8FA',\n  imagePosition: string\n): string => {\n  return `\n  width: ${cardWidth};\n  height: ${cardHeight};\n  background-color: ${cardBackgroundColor};\n  display: flex;\n  flex-direction: ${\n    imagePosition === 'left'\n      ? 'row'\n      : imagePosition === 'right'\n      ? 'row-reverse'\n      : imagePosition === 'top'\n      ? 'column'\n      : imagePosition === 'bottom'\n      ? 'column-reverse'\n      : 'row'\n  };\n  align-items: center;\n  justify-content: space-around;\n  margin: 20px;\n  box-sizing: border-box;\n  padding: 10px;\n  border-radius: 5px;\n  border: ${borderCard.width} ${borderCard.style} ${borderCard.color};\n  `\n}\n\nexport const TextDivStyle = (): string => {\n  return `\n  width: 65%;\n  height: 85%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 10px;\n  `\n}\n\nexport const TitlePStyle = (\n  textAlign: string = 'left',\n  titleColor: string = '#000',\n  fontSizeTitle: string = '100%',\n  paddingTitle: string = '0px',\n  marginTitle: string = '0px'\n): string => {\n  return `\n  color: ${titleColor};\n  font-weight: bolder;\n  text-align: ${textAlign};\n  font-size: ${fontSizeTitle};\n  padding: ${paddingTitle};\n  margin: ${marginTitle};\n  `\n}\n\nexport const DescriptionPStyle = (\n  textAlign: string = 'left',\n  descriptionColor: string = '#000',\n  fontSizeDescription: string = '80%',\n  paddingDescription: string = '0px',\n  marginDescription: string = '0px'\n): string => {\n  return `\n  color: ${descriptionColor};\n  text-align: ${textAlign};\n  font-size: ${fontSizeDescription};\n  padding: ${paddingDescription};\n  margin: ${marginDescription};\n  `\n}\n\nexport const ImgDivStyle = (imagePosition: string): string => {\n  return `\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 35%;\n  height: 85%;\n  margin: ${\n    imagePosition === 'left' || imagePosition === 'right'\n      ? '10px'\n      : imagePosition === 'top' || imagePosition === 'bottom'\n      ? '0px'\n      : '10px'\n  };\n  `\n}\n\nexport const ImgStyle = (\n  imageFormat: string = 'circle',\n  borderImage: borderI,\n  imageWidth: string = '100px',\n  imageHeight: string = '100px'\n): string => {\n  return `\n  width: ${imageWidth};\n  height: ${imageHeight};\n  object-fit: cover;\n  border-radius: ${\n    imageFormat === 'circle' ? '50%' : imageFormat === 'square' ? '0%' : '50%'\n  };\n  border: ${borderImage.width} ${borderImage.style} ${borderImage.color};\n  `\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { cardStyleObjectI, collaborator } from '../interfaces'\nimport {\n  ContainerDivStyle,\n  TextDivStyle,\n  TitlePStyle,\n  DescriptionPStyle,\n  ImgDivStyle,\n  ImgStyle\n} from '../StyleComponents/CardsStyle'\n\nexport interface ICardCompleteProps {\n  collaboratorObj?: collaborator\n  cardStyleObject: cardStyleObjectI\n  imagePosition: string\n}\n\nconst CardComplete: React.FC<ICardCompleteProps> = ({\n  collaboratorObj = {},\n  cardStyleObject,\n  imagePosition\n}) => {\n  const ContainerDiv = styled.div`\n    ${ContainerDivStyle(\n      cardStyleObject.cardWidth,\n      cardStyleObject.cardHeight,\n      cardStyleObject.borderCard,\n      cardStyleObject.cardBackgroundColor,\n      imagePosition\n    )}\n  `\n  const TextDiv = styled.div`\n    ${TextDivStyle()}\n  `\n  const TitleP = styled.p`\n    ${TitlePStyle(\n      cardStyleObject.textAlign,\n      cardStyleObject.titleColor,\n      cardStyleObject.fontSizeTitle,\n      cardStyleObject.paddingTitle,\n      cardStyleObject.marginTitle\n    )}\n  `\n  const DescriptionP = styled.p`\n    ${DescriptionPStyle(\n      cardStyleObject.textAlign,\n      cardStyleObject.descriptionColor,\n      cardStyleObject.fontSizeDescription,\n      cardStyleObject.paddingDescription,\n      cardStyleObject.marginDescription\n    )}\n  `\n  const ImgDiv = styled.div`\n    ${ImgDivStyle(imagePosition)}\n  `\n  const Img = styled.img`\n    ${ImgStyle(\n      cardStyleObject.imageFormat,\n      cardStyleObject.borderImage,\n      cardStyleObject.imageWidth,\n      cardStyleObject.imageHeight\n    )}\n  `\n  return (\n    <ContainerDiv>\n      <ImgDiv>\n        <Img src={collaboratorObj.image} alt='' />\n      </ImgDiv>\n      <TextDiv>\n        <TitleP>{collaboratorObj.title}</TitleP>\n        {collaboratorObj.description ? (\n          <DescriptionP>{collaboratorObj.description}</DescriptionP>\n        ) : null}\n      </TextDiv>\n    </ContainerDiv>\n  )\n}\n\nexport default CardComplete\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { cardStyleObjectI, collaborator } from '../interfaces'\nimport {\n  ContainerDivStyle,\n  TextDivStyle,\n  TitlePStyle,\n  ImgDivStyle,\n  ImgStyle\n} from '../StyleComponents/CardsStyle'\n\nexport interface ICardMinimalProps {\n  collaboratorObj?: collaborator\n  cardStyleObject: cardStyleObjectI\n  imagePosition: string\n}\n\nconst CardMinimal: React.FC<ICardMinimalProps> = ({\n  collaboratorObj = {\n    image:\n      'https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixlib=rb-1.2.1&auto=format&fit=crop&w=639&q=80',\n    title: 'Daenerys Targaryen',\n    description: 'Learning to haul'\n  },\n  cardStyleObject,\n  imagePosition\n}) => {\n  const ContainerDiv = styled.div`\n    ${ContainerDivStyle(\n      cardStyleObject.cardWidth,\n      cardStyleObject.cardHeight,\n      cardStyleObject.borderCard,\n      cardStyleObject.cardBackgroundColor,\n      imagePosition\n    )}\n  `\n  const ImgDiv = styled.div`\n    ${ImgDivStyle(imagePosition)}\n  `\n  const Img = styled.img`\n    ${ImgStyle(\n      cardStyleObject.imageFormat,\n      cardStyleObject.borderImage,\n      cardStyleObject.imageWidth,\n      cardStyleObject.imageHeight\n    )}\n  `\n  const TextDiv = styled.div`\n    ${TextDivStyle()}\n  `\n  const TitleP = styled.p`\n    ${TitlePStyle(cardStyleObject.textAlign, cardStyleObject.titleColor)}\n  `\n  return (\n    <ContainerDiv>\n      <ImgDiv>\n        <Img src={collaboratorObj.image} alt='' />\n      </ImgDiv>\n      <TextDiv>\n        <TitleP>{collaboratorObj.title}</TitleP>\n        {/* <DescriptionP>{collaboratorObj.description}</DescriptionP> */}\n      </TextDiv>\n    </ContainerDiv>\n  )\n}\n\nexport default CardMinimal\n","import styled from 'styled-components'\n\nexport const AppDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  margin: 0px;\n  padding: 0px;\n  background-color: #ecf0f5;\n`\nexport const AppTitleDiv = styled.div`\n  text-align: center;\n`\nexport const ComponentDisplayDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`\nexport const CustomizationDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-top: 20px;\n`\nexport const CardTypeDiv = styled.div`\n  width: 20%;\n  height: 250px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  margin-left: 20px;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const CardTypeContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const P = styled.p`\n  color: #000;\n`\nexport const TitleP = styled.p`\n  color: #000;\n  font-weight: bolder;\n`\nexport const CardTypeButtonDiv = styled.p`\n  display: flex;\n  flex-direction: row;\n  margin: 0px;\n`\nexport const Button = styled.button`\n  height: 25px;\n  width: 80px;\n  align-text: center;\n  margin-left: 5px;\n  margin-top: 5px;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const SizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin-left: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const FlexRowDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n","import { collaborator } from '../interfaces'\n\nconst collaboratorsArray: collaborator[] = [\n  {\n    image:\n      'https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixlib=rb-1.2.1&auto=format&fit=crop&w=639&q=80',\n    title: 'Daenerys Targaryen',\n    description: 'Learning to howl'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1561037404-61cd46aa615b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    title: 'Jhon Snow',\n    description: 'Loves playing catch'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1583511655826-05700d52f4d9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80',\n    title: 'Arya Stark',\n    description: 'Has a nice wardrobe'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1517423440428-a5a00ad493e8?ixlib=rb-1.2.1&auto=format&fit=crop&w=687&q=80',\n    title: 'Tyrion Lannister',\n    description: 'Feels superior'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1518020382113-a7e8fc38eac9?ixlib=rb-1.2.1&auto=format&fit=crop&w=660&q=80',\n    title: 'Khal Drogo',\n    description: 'Scared of hes own shadow'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1510771463146-e89e6e86560e?ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80',\n    title: 'Joffrey Baratheon',\n    description: 'Loves smelling the flowers'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1543466835-00a7907e9de1?ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80',\n    title: 'Theon Greyjoy',\n    description: 'Loves going for walks in the park'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1559190394-df5a28aab5c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80',\n    title: 'Ramsay Bolton',\n    description: 'Enjoys the wind while riding the car'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1537151769678-eb003fb3a153?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80',\n    title: 'Gregor Clegane',\n    description: 'Loves taking naps'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1558788353-f76d92427f16?ixlib=rb-1.2.1&auto=format&fit=crop&w=678&q=80',\n    title: 'Petyr Baelish',\n    description: 'Smiles a lot'\n  }\n]\n\nexport default collaboratorsArray\n","import styled from 'styled-components'\n\nexport const ComponentDiv = styled.div`\n  width: 20%;\n  height: 300px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const ComponentTitleP = styled.p`\n  color: #000;\n  margin: 0px;\n  font-weight: bolder;\n`\nexport const ComponentSizeDiv = styled.div`\n  height: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin: 0px;\n  padding: 0px;\n`\nexport const ComponentSizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin-left: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const WidthHeightDiv = styled.div``\nexport const ComponentColorDiv = styled.div`\n  height: 25px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin: 0px;\n  margin-left: 10px;\n`\nexport const ColorTextInput = styled.input`\n  width: 80px;\n  height: 25px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const ColorInput = styled.input`\n  width: 25px;\n  height: 25px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\n","import styled from 'styled-components'\n\nexport const CardDiv = styled.div`\n  width: 20%;\n  height: auto;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const CardSizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin-left: 10px;\n  margin-right: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const LongInput = styled.input`\n  height: 25px;\n  width: 150px;\n  margin-left: 10px;\n  margin-right: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const Hr = styled.hr`\n  margin: 10px;\n  background-color: #000;\n`\n","import styled from 'styled-components'\n\nexport const CodeSnippetDiv = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-content: space-around;\n  background-color: #fff;\n`\nexport const SnippetDiv = styled.div`\n  width: 55%;\n  margin: 0px auto;\n`\nexport const CodeDiv = styled.div`\n  width: 55%;\n  background-color: #000;\n  border-radius: 4px;\n  margin: 0px auto;\n`\nexport const Code = styled.code`\n  background-color: #000;\n  color: #fff;\n  border-radius: 3px;\n  font-family: courier;\n  padding: 0 3px;\n`\n","import { CollaboratorsList } from 'react-component-collaborators'\nimport { CardComplete } from 'react-component-collaborators'\nimport { CardMinimal } from 'react-component-collaborators'\n\nimport React, { ChangeEventHandler, MouseEventHandler } from 'react'\nimport { useState } from 'react'\nimport {\n  AppDiv,\n  AppTitleDiv,\n  Button,\n  CardTypeButtonDiv,\n  CardTypeContainerDiv,\n  P,\n  ComponentDisplayDiv,\n  CustomizationDiv,\n  SizeInput,\n  TitleP,\n  FlexRowDiv\n} from './style/TypeCardStyle'\nimport collaboratorsArray from './mock/collaboratorsArray'\nimport { cardStyleObjectI, listStyleObjectI } from './interfaces'\nimport {\n  ComponentDiv,\n  ColorTextInput,\n  ColorInput\n} from './style/ComponentContainerStyle'\nimport { CardDiv, CardSizeInput, Hr, LongInput } from './style/CardStyle'\nimport {\n  Code,\n  CodeDiv,\n  CodeSnippetDiv,\n  SnippetDiv\n} from './style/CodeSnippetTyle'\nconst borderImage = {\n  width: '4px',\n  style: 'solid',\n  color: '#E8C3C9'\n}\nconst borderCard = {\n  width: '4px',\n  style: 'solid',\n  color: '#E8C3C9'\n}\n\nconst App: React.FC = () => {\n  // Card component\n  const [cardComponent, setCardComponent] = useState<string>('complete')\n  const [imagePosition, setImagePosition] = useState<string>('left')\n\n  // List state\n  const [listStyleObject, setListStyleObject] = useState<listStyleObjectI>({\n    listWidth: '700px',\n    listHeight: '400px',\n    direction: 'vertical',\n    listBackgroundColor: '#FFF'\n  })\n\n  // Card state\n  const [cardStyleObject, setCardStyleObject] = useState<cardStyleObjectI>({\n    cardWidth: '300px',\n    cardHeight: '150px',\n    cardBackgroundColor: '#7EE8FA',\n    textAlign: 'center',\n    imageFormat: 'circle',\n    borderImage: borderImage,\n    borderCard: borderCard,\n    titleColor: '#000',\n    descriptionColor: '#000',\n    imageWidth: '100px',\n    imageHeight: '100px',\n    fontSizeTitle: '100%',\n    paddingTitle: '0px 0px 20px 0px',\n    marginTitle: '0px 0px 0px 0px',\n    fontSizeDescription: '80%',\n    paddingDescription: '0px 0px 0px 0px',\n    marginDescription: '0px 0px 0px 0px'\n  })\n\n  // Code snippet\n  const collaborarorsArraySnippet: string = `\n  collaboratorsArray = [{\n    image: 'mandatory url',\n    title: 'mandatory title',\n    description: 'optional description'\n  }, {}, ...];\n  `\n  const basicStructureSnippet: string = `\n  <CollaboratorsList collaboratorsArray={collaboratorsArray} listStyleObject={listStyleObject}>\n    ${\n      cardComponent === 'complete' ? '<CardComplete' : '<CardMinimal'\n    } cardStyleObject={cardStyleObject} imagePosition={imagePosition}/>\n  </CollaboratorsList>\n  `\n  const imagePositionSnippet: string = `\n  const imagePosition = '${imagePosition}';\n  `\n  const listStyleObjectSnippet: string = `\n  const listStyleObject = {\n    listWidth: '${listStyleObject.listWidth}',\n    listHeight: '${listStyleObject.listHeight}', \n    direction: '${listStyleObject.direction}',\n    listBackgroundColor: '${listStyleObject.listBackgroundColor}'\n  };\n  `\n\n  const cardStyleObjectSnippet: string = `\n  const cardStyleObject = {\n    cardWidth: '${cardStyleObject.cardWidth}',\n    cardHeight: '${cardStyleObject.cardHeight}',\n    cardBackgroundColor: '${cardStyleObject.cardBackgroundColor}',\n    textAlign: '${cardStyleObject.textAlign}',\n    imageFormat: '${cardStyleObject.imageFormat}',\n    borderImage: {\n      width: '${cardStyleObject.borderImage.width}',\n      style: '${cardStyleObject.borderImage.style}',\n      color: '${cardStyleObject.borderImage.color}'\n    },\n    borderCard: {\n      width: '${cardStyleObject.borderCard.width}',\n      style: '${cardStyleObject.borderCard.style}',\n      color: '${cardStyleObject.borderCard.color}'\n    },\n    titleColor: '${cardStyleObject.titleColor}',\n    descriptionColor: '${cardStyleObject.descriptionColor}',\n    imageWidth: '${cardStyleObject.imageWidth}',\n    imageHeight: '${cardStyleObject.imageHeight}',\n    fontSizeTitle: '${cardStyleObject.fontSizeTitle}',\n    paddingTitle: '${cardStyleObject.paddingTitle}',\n    marginTitle: '${cardStyleObject.marginTitle}',\n    fontSizeDescription: '${cardStyleObject.fontSizeDescription}',\n    paddingDescription: '${cardStyleObject.paddingDescription}',\n    marginDescription: '${cardStyleObject.marginDescription}'\n  };\n  `\n\n  // Type of card functions\n  const handleTypeOfCardComplete: MouseEventHandler<HTMLButtonElement> = () => {\n    setCardComponent('complete')\n  }\n  const handleTypeOfCardMinimal: MouseEventHandler<HTMLButtonElement> = () => {\n    setCardComponent('minimal')\n  }\n  const handleImagePosition: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setImagePosition(e.currentTarget.value)\n  }\n\n  // List functions\n  const handleListWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, listWidth: e.target.value })\n  }\n  const handleListHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, listHeight: e.target.value })\n  }\n  const handleListBackgroundColor: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setListStyleObject({\n      ...listStyleObject,\n      listBackgroundColor: e.target.value\n    })\n  }\n  const handleDirection: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, direction: e.currentTarget.value })\n  }\n\n  // Card functions\n  const handleCardWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, cardWidth: e.target.value })\n  }\n  const handleCardHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, cardHeight: e.target.value })\n  }\n  const handleTextAlign: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, textAlign: e.currentTarget.value })\n  }\n  const handleCardBackgroundColor: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      cardBackgroundColor: e.target.value\n    })\n  }\n  const handleImageFormat: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageFormat: e.currentTarget.value\n    })\n  }\n  const handleTitleColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      titleColor: e.currentTarget.value\n    })\n  }\n  const handleDescriptionColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      descriptionColor: e.currentTarget.value\n    })\n  }\n  const handleImageWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageWidth: e.currentTarget.value\n    })\n  }\n  const handleImageHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageHeight: e.currentTarget.value\n    })\n  }\n  const handleFontSizeTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      fontSizeTitle: e.currentTarget.value\n    })\n  }\n  const handleMarginTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      marginTitle: e.currentTarget.value\n    })\n  }\n  const handlePaddingTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      paddingTitle: e.currentTarget.value\n    })\n  }\n  const handleFontSizeDescription: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      fontSizeDescription: e.currentTarget.value\n    })\n  }\n  const handleMarginDescription: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      marginDescription: e.currentTarget.value\n    })\n  }\n  const handlePaddingDescription: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      paddingDescription: e.currentTarget.value\n    })\n  }\n  const handleBorderCardWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderCard.width = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderCardStyle: MouseEventHandler<HTMLButtonElement> = (e) => {\n    borderCard.style = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderCardColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderCard.color = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderImageWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderImage.width = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n  const handleBorderImageStyle: MouseEventHandler<HTMLButtonElement> = (e) => {\n    borderImage.style = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n  const handleBorderImageColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderImage.color = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n\n  return (\n    <AppDiv>\n      <AppTitleDiv>\n        <h1>React Customizable Collaborators Component</h1>\n      </AppTitleDiv>\n      <ComponentDisplayDiv>\n        <CollaboratorsList\n          collaboratorsArray={collaboratorsArray}\n          listStyleObject={listStyleObject}\n        >\n          {cardComponent === 'complete' ? (\n            <CardComplete\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          ) : cardComponent === 'minimal' ? (\n            <CardMinimal\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          ) : (\n            <CardComplete\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          )}\n        </CollaboratorsList>\n      </ComponentDisplayDiv>\n      <CustomizationDiv>\n        <ComponentDiv>\n          <CardTypeContainerDiv>\n            <TitleP>Type of Card:</TitleP>\n            <CardTypeButtonDiv>\n              <Button type='button' onClick={handleTypeOfCardComplete}>\n                Complete\n              </Button>\n              <Button type='button' onClick={handleTypeOfCardMinimal}>\n                Minimal\n              </Button>\n            </CardTypeButtonDiv>\n          </CardTypeContainerDiv>\n          <CardTypeContainerDiv>\n            <TitleP>Image position:</TitleP>\n            <CardTypeButtonDiv>\n              <Button type='button' value='left' onClick={handleImagePosition}>\n                Left\n              </Button>\n              <Button type='button' value='right' onClick={handleImagePosition}>\n                Right\n              </Button>\n            </CardTypeButtonDiv>\n            <CardTypeButtonDiv>\n              <Button type='button' value='top' onClick={handleImagePosition}>\n                Top\n              </Button>\n              <Button\n                type='button'\n                value='bottom'\n                onClick={handleImagePosition}\n              >\n                Bottom\n              </Button>\n            </CardTypeButtonDiv>\n          </CardTypeContainerDiv>\n        </ComponentDiv>\n\n        <ComponentDiv>\n          <TitleP>Properties for the container:</TitleP>\n          <FlexRowDiv>\n            <P>Width </P>\n            <CardSizeInput\n              placeholder={listStyleObject.listWidth}\n              onChange={handleListWidth}\n            />\n            <P>Height</P>\n            <CardSizeInput\n              type='text'\n              placeholder={listStyleObject.listHeight}\n              onChange={handleListHeight}\n            />\n          </FlexRowDiv>\n          <div>\n            <P>Display direction</P>\n            <Button type='button' value='vertical' onClick={handleDirection}>\n              Vertical\n            </Button>\n            <Button type='button' value='horizontal' onClick={handleDirection}>\n              Horizontal\n            </Button>\n            <Button type='button' value='none' onClick={handleDirection}>\n              None\n            </Button>\n          </div>\n          <div>\n            <P>Background color:</P>\n            <div>\n              <ColorTextInput\n                type='text'\n                placeholder={listStyleObject.listBackgroundColor}\n                onChange={handleListBackgroundColor}\n              />\n              <ColorInput\n                type='color'\n                value={listStyleObject.listBackgroundColor}\n                placeholder={listStyleObject.listBackgroundColor}\n                onChange={handleListBackgroundColor}\n              />\n            </div>\n          </div>\n        </ComponentDiv>\n\n        <CardDiv>\n          <TitleP>Properties for the card:</TitleP>\n          <div>\n            <FlexRowDiv>\n              <P>Width</P>\n              <CardSizeInput\n                type='text'\n                placeholder={cardStyleObject.cardWidth}\n                onChange={handleCardWidth}\n              />\n              <P>Height</P>\n              <CardSizeInput\n                type='text'\n                placeholder={cardStyleObject.cardHeight}\n                onChange={handleCardHeight}\n              />\n            </FlexRowDiv>\n            <FlexRowDiv>\n              <P>Background color:</P>\n              <div>\n                <ColorTextInput\n                  type='text'\n                  placeholder={cardStyleObject.cardBackgroundColor}\n                  onChange={handleCardBackgroundColor}\n                />\n                <ColorInput\n                  type='color'\n                  value={cardStyleObject.cardBackgroundColor}\n                  onChange={handleCardBackgroundColor}\n                />\n              </div>\n            </FlexRowDiv>\n            <P>Card border:</P>\n            <FlexRowDiv>\n              <P>Width</P>\n              <SizeInput\n                type='text'\n                placeholder={cardStyleObject.borderCard.width}\n                onChange={handleBorderCardWidth}\n              />\n              <P>Color</P>\n              <div>\n                <ColorTextInput\n                  type='text'\n                  placeholder={cardStyleObject.borderCard.color}\n                  onChange={handleBorderCardColor}\n                />\n                <ColorInput\n                  type='color'\n                  value={cardStyleObject.borderCard.color}\n                  onChange={handleBorderCardColor}\n                />\n              </div>\n            </FlexRowDiv>\n            <FlexRowDiv>\n              <P>Style</P>\n              <Button\n                type='button'\n                value='none'\n                onClick={handleBorderCardStyle}\n              >\n                None\n              </Button>\n              <Button\n                type='button'\n                value='solid'\n                onClick={handleBorderCardStyle}\n              >\n                Solid\n              </Button>\n              <Button\n                type='button'\n                value='dashed'\n                onClick={handleBorderCardStyle}\n              >\n                Dashed\n              </Button>\n              <Button\n                type='button'\n                value='double'\n                onClick={handleBorderCardStyle}\n              >\n                Double\n              </Button>\n            </FlexRowDiv>\n          </div>\n          <Hr />\n          <TitleP>Properties for the image:</TitleP>\n          <div>\n            <FlexRowDiv>\n              <P>Format:</P>\n              <Button type='button' value='circle' onClick={handleImageFormat}>\n                circle\n              </Button>\n              <Button type='button' value='square' onClick={handleImageFormat}>\n                Square\n              </Button>\n            </FlexRowDiv>\n            <FlexRowDiv>\n              <P>Width</P>\n              <CardSizeInput\n                type='text'\n                placeholder={cardStyleObject.imageWidth}\n                onChange={handleImageWidth}\n              />\n              <P>Height</P>\n              <CardSizeInput\n                type='text'\n                placeholder={cardStyleObject.imageHeight}\n                onChange={handleImageHeight}\n              />\n            </FlexRowDiv>\n            <P>Border</P>\n            <FlexRowDiv>\n              <P>Width</P>\n              <SizeInput\n                type='text'\n                placeholder={cardStyleObject.borderImage.width}\n                onChange={handleBorderImageWidth}\n              />\n              <P>Color</P>\n              <div>\n                <ColorTextInput\n                  type='text'\n                  placeholder={cardStyleObject.borderImage.color}\n                  onChange={handleBorderImageColor}\n                />\n                <ColorInput\n                  type='color'\n                  value={cardStyleObject.borderImage.color}\n                  onChange={handleBorderImageColor}\n                />\n              </div>\n            </FlexRowDiv>\n            <FlexRowDiv>\n              <P>Style</P>\n              <Button\n                type='button'\n                value='none'\n                onClick={handleBorderImageStyle}\n              >\n                None\n              </Button>\n              <Button\n                type='button'\n                value='solid'\n                onClick={handleBorderImageStyle}\n              >\n                Solid\n              </Button>\n              <Button\n                type='button'\n                value='dashed'\n                onClick={handleBorderImageStyle}\n              >\n                Dashed\n              </Button>\n              <Button\n                type='button'\n                value='double'\n                onClick={handleBorderImageStyle}\n              >\n                Double\n              </Button>\n            </FlexRowDiv>\n          </div>\n        </CardDiv>\n\n        <CardDiv>\n          <TitleP>Properties for the text:</TitleP>\n          <FlexRowDiv>\n            <P>Align</P>\n            <Button type='button' value='left' onClick={handleTextAlign}>\n              Left\n            </Button>\n            <Button type='button' value='center' onClick={handleTextAlign}>\n              Center\n            </Button>\n            <Button type='button' value='right' onClick={handleTextAlign}>\n              Right\n            </Button>\n          </FlexRowDiv>\n\n          <div>\n            <TitleP>Title:</TitleP>\n            <FlexRowDiv>\n              <P>Color:</P>\n              <div>\n                <ColorTextInput\n                  type='text'\n                  placeholder={cardStyleObject.titleColor}\n                  onChange={handleTitleColor}\n                />\n                <ColorInput\n                  type='color'\n                  value={cardStyleObject.titleColor}\n                  onChange={handleTitleColor}\n                />\n              </div>\n              <FlexRowDiv>\n                <P>Font size</P>\n                <SizeInput\n                  type='text'\n                  placeholder={cardStyleObject.fontSizeTitle}\n                  onChange={handleFontSizeTitle}\n                />\n              </FlexRowDiv>\n            </FlexRowDiv>\n          </div>\n\n          <div>\n            <P>Padding</P>\n            <LongInput\n              type='text'\n              placeholder={cardStyleObject.marginTitle}\n              onChange={handleMarginTitle}\n            />\n          </div>\n          <div>\n            <P>Margin</P>\n            <LongInput\n              type='text'\n              placeholder={cardStyleObject.paddingTitle}\n              onChange={handlePaddingTitle}\n            />\n          </div>\n\n          {cardComponent === 'complete' ? (\n            <div>\n              <Hr />\n              <TitleP>Description:</TitleP>\n              <FlexRowDiv>\n                <P>Color</P>\n                <div>\n                  <ColorTextInput\n                    type='text'\n                    placeholder={cardStyleObject.descriptionColor}\n                    onChange={handleDescriptionColor}\n                  />\n                  <ColorInput\n                    type='color'\n                    value={cardStyleObject.descriptionColor}\n                    onChange={handleDescriptionColor}\n                  />\n                </div>\n                <P>Font size</P>\n                <SizeInput\n                  type='text'\n                  placeholder={cardStyleObject.fontSizeDescription}\n                  onChange={handleFontSizeDescription}\n                />\n              </FlexRowDiv>\n              <P>Padding</P>\n              <LongInput\n                type='text'\n                placeholder={cardStyleObject.marginDescription}\n                onChange={handleMarginDescription}\n              />\n              <P>Margin</P>\n              <LongInput\n                type='text'\n                placeholder={cardStyleObject.paddingDescription}\n                onChange={handlePaddingDescription}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </CardDiv>\n      </CustomizationDiv>\n      <CodeSnippetDiv>\n        <SnippetDiv>\n          <p>\n            In order for this component to work, your collaborators array should\n            look like this:\n          </p>\n        </SnippetDiv>\n        <CodeDiv>\n          <pre>\n            <Code>{collaborarorsArraySnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <SnippetDiv>\n          <p>\n            Once you are happy with the result, just copy and paste the\n            following variables with the styles:\n          </p>\n        </SnippetDiv>\n        <CodeDiv>\n          <pre>\n            <Code>{imagePositionSnippet}</Code>\n          </pre>\n          <pre>\n            <Code>{listStyleObjectSnippet}</Code>\n          </pre>\n          <pre>\n            <Code>{cardStyleObjectSnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <SnippetDiv>\n          <p>Finally your component should look like this:</p>\n        </SnippetDiv>\n        <CodeDiv>\n          <pre>\n            <Code>{basicStructureSnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <SnippetDiv>\n          <p>I hope you find this component useful!</p>\n        </SnippetDiv>\n      </CodeSnippetDiv>\n    </AppDiv>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}