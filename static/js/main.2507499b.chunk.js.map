{"version":3,"sources":["../../src/CollaboratorsList/CollaboratorsList.tsx","../../src/StyleComponents/ListStyle.tsx","../../src/StyleComponents/CardsStyle.tsx","../../src/Cards/CardComplete.tsx","../../src/Cards/CardMinimal.tsx","style/TypeCardStyle.tsx","mock/collaboratorsArray.tsx","style/CodeSnippetTyle.tsx","style/ComponentContainerStyle.tsx","components/TypeOfCard.tsx","style/CardStyle.tsx","components/ContainerProperties.tsx","components/CardProperties.tsx","components/TextProperties.tsx","App.tsx","index.tsx"],"names":["CollaboratorsList","listStyleObject","collaboratorsArray","children","ListContainerDiv","styled","listWidth","listHeight","direction","listBackgroundColor","collaboratorObj","ContainerDivStyle","cardWidth","cardHeight","cardBackgroundColor","imagePosition","borderCard","TitlePStyle","textAlign","titleColor","fontSizeTitle","paddingTitle","marginTitle","ImgDivStyle","ImgStyle","imageFormat","imageWidth","imageHeight","borderImage","CardComplete","cardStyleObject","ContainerDiv","TextDiv","TitleP","DescriptionP","descriptionColor","fontSizeDescription","paddingDescription","marginDescription","ImgDiv","Img","src","image","alt","React","CardMinimal","title","description","AppDiv","div","AppTitleDiv","ComponentDisplayDiv","CustomizationDiv","CardTypeContainerDiv","p","CardTypeButtonDiv","Button","button","SizeInput","input","FlexRowDiv","CodeSnippet","Snippet","CodeDiv","Code","code","ComponentDiv","ColorTextInput","ColorInput","TypeOfCard","setCardComponent","setImagePosition","handleImagePosition","e","currentTarget","value","type","onClick","CardDiv","CardSizeInput","LongInput","Hr","hr","ContainerProperties","setListStyleObject","handleListBackgroundColor","target","handleDirection","placeholder","onChange","CardProperties","setCardStyleObject","handleCardBackgroundColor","handleImageFormat","handleBorderCardStyle","style","handleBorderCardColor","color","handleBorderImageStyle","handleBorderImageColor","width","marginLeft","TextProperties","cardComponent","handleTextAlign","handleTitleColor","handleDescriptionColor","App","useState","basicStructureSnippet","imagePositionSnippet","listStyleObjectSnippet","cardStyleObjectSnippet","wordWrap","ReactDOM","render","document","getElementById"],"mappings":"wZAWA,IAAMA,EAAuD,SAAC,G,ICXxB,EAAD,MDYnCC,oBACAC,uBACAC,aAEMC,EAAmBC,IAAH,SChBc,EDkBhCJ,EADqB,UCjBU,EDmB/BA,EAFqB,WCjBU,EDoB/BA,EAHqB,UCjBU,EDqB/BA,EALJ,yBCfAK,UAAoB,eACpBC,UAAqB,cACrBC,UAAoB,iBACpBC,UAA8B,QAE9B,8HAOED,qBAEIA,0BATN,gDAeEA,YAEIA,eAFJA,SAIIA,UAnBN,qBAwBEA,oBAEIA,wBAEAA,0BA5BN,oBDkBA,OACE,+BACGN,EAAA,KAAuB,mBACtB,yBAA6B,CAAEQ,gBAAiBA,SExB3CC,EAAoB,SAAC,EAAD,SAO/B,YANAC,UAAoB,cACpBC,UAAqB,cAErBC,UAA8B,WAG9B,yGAMEC,iBAEIA,0BAEAA,mBAEAA,8BAZN,sKAsBUC,EAtBV,UAsB8BA,EAtB9B,UAsBkDA,EAtBlD,eAqCWC,EAAc,SAAC,EAAD,SAOzB,YANAC,UAAoB,aACpBC,UAAqB,aACrBC,UAAwB,aACxBC,UAAuB,YACvBC,UAAsB,OAEtB,iIA0BWC,EAAc,SAACR,GAC1B,iIAOEA,sBAA4BA,EAA5BA,OAEIA,sBAA2BA,EAA3BA,MATN,iBAgBWS,EAAW,SAAC,EAAD,OAMtB,YALAC,UAAsB,eAEtBC,UAAqB,cACrBC,UAAsB,SAEtB,gFAKEF,mBAAmCA,kBALrC,uBAOUG,EAPV,UAO+BA,EAP/B,UAOoDA,EAPpD,e,gbCrFF,IAAMC,EAA6C,SAAC,G,ID8ClB,EAAD,Q,IC7C/BnB,2BAAkBA,EAAA,KAClBoB,oBACAf,kBAEMgB,EAAe1B,IAAH,QACdM,EACAmB,EADiB,UAEjBA,EAFiB,WAGjBA,EAHiB,WAIjBA,EAJiB,oBADrB,IASME,EAAU3B,IAAH,QDKb,0ICFM4B,EAAS5B,IAAH,MACRY,EACAa,EADW,UAEXA,EAFW,WAGXA,EAHW,cAIXA,EAJW,aAKXA,EANJ,cASMI,EAAe7B,IAAH,ODoBc,EClB5ByB,EADiB,UDmBU,ECjB3BA,EAFiB,iBDmBU,EChB3BA,EAHiB,oBDmBU,ECf3BA,EAJiB,mBDmBU,ECd3BA,EANJ,uBDqBAZ,UAAoB,aACpBiB,UAA2B,aAC3BC,UAA8B,YAC9BC,UAA6B,YAC7BC,UAA4B,OAE5B,0GClBMC,EAASlC,IAAH,QACRkB,EADJ,IAGMiB,EAAMnC,IAAH,QACLmB,EACAM,EADQ,YAERA,EAFQ,YAGRA,EAHQ,WAIRA,EALJ,cAQA,OACE,+BACE,+BACE,2BAAKW,IAAK/B,EAAgBgC,MAAOC,IAAI,MAEvCC,+BACEA,+BAASlC,EADXkC,OAEGlC,cACCkC,+BAAelC,EADhBA,aAPP,Q,wWC/CF,IAAMmC,EAA2C,SAAC,G,QAChDnC,2BAAkBA,EAAA,CAChBgC,MADgB,8GAGhBI,MAHgB,qBAIhBC,YAAa,oBAJG,EAMlBjB,oBACAf,kBAEMgB,EAAe1B,IAAH,QACdM,EACAmB,EADiB,UAEjBA,EAFiB,WAGjBA,EAHiB,WAIjBA,EAJiB,oBADrB,IASMS,EAASlC,IAAH,QACRkB,EADJ,IAGMiB,EAAMnC,IAAH,QACLmB,EACAM,EADQ,YAERA,EAFQ,YAGRA,EAHQ,WAIRA,EALJ,cAQME,EAAU3B,IAAH,QFVb,0IEaM4B,EAAS5B,IAAH,MACRY,EAAYa,EAAD,UAA4BA,EAD3C,aAGA,OACE,+BACE,+BACE,2BAAKW,IAAK/B,EAAgBgC,MAAOC,IAAI,MAEvCC,+BACEA,+BAASlC,EANf,U,gmFCnDK,IAAMsC,EAAS3C,IAAO4C,IAAV,KAYNC,EAAc7C,IAAO4C,IAAV,KAOXE,EAAsB9C,IAAO4C,IAAV,KAOnBG,EAAmB/C,IAAO4C,IAAV,KAoBhBI,GAZchD,IAAO4C,IAAV,KAYY5C,IAAO4C,IAAV,MAIpBhB,EAAS5B,IAAOiD,EAAV,KAINC,EAAoBlD,IAAOiD,EAAV,KAIjBE,EAASnD,IAAOoD,OAAV,KAkBNC,EAAYrD,IAAOsD,MAAV,KAeTC,EAAavD,IAAO4C,IAAV,KC5BR/C,EA/D4B,CACzC,CACEwC,MACE,8GACFI,MAAO,qBACPC,YAAa,oBAEf,CACEL,MACE,sIACFI,MAAO,YACPC,YAAa,uBAEf,CACEL,MACE,wIACFI,MAAO,aACPC,YAAa,uBAEf,CACEL,MACE,8GACFI,MAAO,mBACPC,YAAa,kBAEf,CACEL,MACE,8GACFI,MAAO,aACPC,YAAa,4BAEf,CACEL,MACE,8GACFI,MAAO,oBACPC,YAAa,8BAEf,CACEL,MACE,2GACFI,MAAO,gBACPC,YAAa,qCAEf,CACEL,MACE,qIACFI,MAAO,gBACPC,YAAa,wCAEf,CACEL,MACE,wIACFI,MAAO,iBACPC,YAAa,qBAEf,CACEL,MACE,2GACFI,MAAO,gBACPC,YAAa,iB,qqBC3DV,IAAMc,GAAcxD,IAAOiD,EAAV,MAQXQ,GAAUzD,IAAO4C,IAAV,MAKPc,GAAU1D,IAAO4C,IAAV,KAMPe,GAAO3D,IAAO4D,KAAV,K,o1ECnBV,IAAMC,GAAe7D,IAAO4C,IAAV,MAmDZkB,IAxCkB9D,IAAOiD,EAAV,MAKIjD,IAAO4C,IAAV,MASK5C,IAAOsD,MAAV,MAgBDtD,IAAO4C,IAAV,MACM5C,IAAO4C,IAAV,MASA5C,IAAOsD,MAAV,OAedS,GAAa/D,IAAOsD,MAAV,MCNRU,GAhDgC,SAAC,GAGzC,IAFLC,EAEI,EAFJA,iBACAC,EACI,EADJA,iBAQMC,EAA4D,SAACC,GACjEF,EAAiBE,EAAEC,cAAcC,QAEnC,OACE,kBAACT,GAAD,KACE,kBAACb,EAAD,KACE,kBAAC,EAAD,sBACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAQoB,KAAK,SAASC,QAdyC,WACrEP,EAAiB,cAaX,YAGA,kBAACd,EAAD,CAAQoB,KAAK,SAASC,QAdwC,WACpEP,EAAiB,aAaX,aAKJ,kBAACjB,EAAD,KACE,kBAAC,EAAD,wBACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAQoB,KAAK,SAASD,MAAM,OAAOE,QAASL,GAA5C,QAGA,kBAAChB,EAAD,CAAQoB,KAAK,SAASD,MAAM,QAAQE,QAASL,GAA7C,UAIF,kBAACjB,EAAD,KACE,kBAACC,EAAD,CAAQoB,KAAK,SAASD,MAAM,MAAME,QAASL,GAA3C,OAGA,kBAAChB,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASL,GAA9C,c,g7CCpDH,IAAMM,GAAUzE,IAAO4C,IAAV,MAWP8B,GAAgB1E,IAAOsD,MAAV,MAgBbqB,GAAY3E,IAAOsD,MAAV,MAiBTsB,GAAK5E,IAAO6E,GAAV,MC6CAC,GAvEkD,SAAC,GAG3D,IAFLC,EAEI,EAFJA,mBACAnF,EACI,EADJA,gBASMoF,EAAkE,SACtEZ,GAEAW,EAAmB,6BACdnF,GADa,IAEhBQ,oBAAqBgE,EAAEa,OAAOX,UAG5BY,EAAwD,SAACd,GAC7DW,EAAmB,6BAAKnF,GAAN,IAAuBO,UAAWiE,EAAEC,cAAcC,UAGtE,OACE,kBAACT,GAAD,KACE,kBAAC,EAAD,sCACA,kBAACN,EAAD,KACE,qCACA,kBAACmB,GAAD,CACES,YAAavF,EAAgBK,UAC7BmF,SAzBsD,SAAChB,GAC7DW,EAAmB,6BAAKnF,GAAN,IAAuBK,UAAWmE,EAAEa,OAAOX,YA0BzD,qCACA,kBAACI,GAAD,CACEH,KAAK,OACLY,YAAavF,EAAgBM,WAC7BkF,SA5BuD,SAAChB,GAC9DW,EAAmB,6BAAKnF,GAAN,IAAuBM,WAAYkE,EAAEa,OAAOX,aA8B5D,6BACE,gDACA,kBAACnB,EAAD,CAAQoB,KAAK,SAASD,MAAM,WAAWE,QAASU,GAAhD,YAGA,kBAAC/B,EAAD,CAAQoB,KAAK,SAASD,MAAM,aAAaE,QAASU,GAAlD,cAGA,kBAAC/B,EAAD,CAAQoB,KAAK,SAASD,MAAM,OAAOE,QAASU,GAA5C,SAIF,6BACE,gDACA,6BACE,kBAACpB,GAAD,CACES,KAAK,OACLY,YAAavF,EAAgBQ,oBAC7BgF,SAAUJ,IAEZ,kBAACjB,GAAD,CACEQ,KAAK,QACLD,MAAO1E,EAAgBQ,oBACvB+E,YAAavF,EAAgBQ,oBAC7BgF,SAAUJ,QCuIPK,GAzMwC,SAAC,GAKjD,IAJL5D,EAII,EAJJA,gBACA6D,EAGI,EAHJA,mBACA3E,EAEI,EAFJA,WACAY,EACI,EADJA,YASMgE,EAAkE,SACtEnB,GAEAkB,EAAmB,6BACd7D,GADa,IAEhBhB,oBAAqB2D,EAAEa,OAAOX,UAG5BkB,EAA0D,SAACpB,GAC/DkB,EAAmB,6BACd7D,GADa,IAEhBL,YAAagD,EAAEC,cAAcC,UAmB3BmB,EAA8D,SAACrB,GACnEzD,EAAW+E,MAAQtB,EAAEC,cAAcC,MACnCgB,EAAmB,6BAAK7D,GAAN,IAAuBd,iBAErCgF,EAA8D,SAACvB,GACnEzD,EAAWiF,MAAQxB,EAAEC,cAAcC,MACnCgB,EAAmB,6BAAK7D,GAAN,IAAuBd,iBAMrCkF,EAA+D,SAACzB,GACpE7C,EAAYmE,MAAQtB,EAAEC,cAAcC,MACpCgB,EAAmB,6BAAK7D,GAAN,IAAuBF,kBAErCuE,EAA+D,SAAC1B,GACpE7C,EAAYqE,MAAQxB,EAAEC,cAAcC,MACpCgB,EAAmB,6BAAK7D,GAAN,IAAuBF,kBAE3C,OACE,kBAACkD,GAAD,KACE,kBAAC,EAAD,iCACA,6BACE,kBAAClB,EAAD,KACE,oCACA,kBAACmB,GAAD,CACEH,KAAK,OACLY,YAAa1D,EAAgBlB,UAC7B6E,SAjEoD,SAAChB,GAC7DkB,EAAmB,6BAAK7D,GAAN,IAAuBlB,UAAW6D,EAAEa,OAAOX,YAkEvD,qCACA,kBAACI,GAAD,CACEH,KAAK,OACLY,YAAa1D,EAAgBjB,WAC7B4E,SApEqD,SAAChB,GAC9DkB,EAAmB,6BAAK7D,GAAN,IAAuBjB,WAAY4D,EAAEa,OAAOX,aAsE1D,kBAACf,EAAD,KACE,gDACA,6BACE,kBAACO,GAAD,CACES,KAAK,OACLY,YAAa1D,EAAgBhB,oBAC7B2E,SAAUG,IAEZ,kBAACxB,GAAD,CACEQ,KAAK,QACLD,MAAO7C,EAAgBhB,oBACvB2E,SAAUG,MAIhB,2CACA,kBAAChC,EAAD,KACE,oCACA,kBAACF,EAAD,CACEkB,KAAK,OACLY,YAAa1D,EAAgBd,WAAWoF,MACxCX,SA/D0D,SAAChB,GACnEzD,EAAWoF,MAAQ3B,EAAEC,cAAcC,MACnCgB,EAAmB,6BAAK7D,GAAN,IAAuBd,mBA+DnC,uBAAG+E,MAAO,CAAEM,WAAY,WAAxB,SACA,6BACE,kBAAClC,GAAD,CACES,KAAK,OACLY,YAAa1D,EAAgBd,WAAWiF,MACxCR,SAAUO,IAEZ,kBAAC5B,GAAD,CACEQ,KAAK,QACLD,MAAO7C,EAAgBd,WAAWiF,MAClCR,SAAUO,MAIhB,kBAACpC,EAAD,KACE,oCACA,kBAACJ,EAAD,CAAQoB,KAAK,SAASD,MAAM,OAAOE,QAASiB,GAA5C,QAGA,kBAACtC,EAAD,CAAQoB,KAAK,SAASD,MAAM,QAAQE,QAASiB,GAA7C,SAGA,kBAACtC,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASiB,GAA9C,UAGA,kBAACtC,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASiB,GAA9C,YAKJ,kBAACb,GAAD,MACA,kBAAC,EAAD,kCACA,6BACE,kBAACrB,EAAD,KACE,sCACA,kBAACJ,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASgB,GAA9C,UAGA,kBAACrC,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASgB,GAA9C,WAIF,kBAACjC,EAAD,KACE,oCACA,kBAACmB,GAAD,CACEH,KAAK,OACLY,YAAa1D,EAAgBJ,WAC7B+D,SA5HqD,SAAChB,GAC9DkB,EAAmB,6BACd7D,GADa,IAEhBJ,WAAY+C,EAAEC,cAAcC,YA2HxB,qCACA,kBAACI,GAAD,CACEH,KAAK,OACLY,YAAa1D,EAAgBH,YAC7B8D,SA5HsD,SAAChB,GAC/DkB,EAAmB,6BACd7D,GADa,IAEhBH,YAAa8C,EAAEC,cAAcC,aA4H3B,qCACA,kBAACf,EAAD,KACE,oCACA,kBAACF,EAAD,CACEkB,KAAK,OACLY,YAAa1D,EAAgBF,YAAYwE,MACzCX,SAnH2D,SAAChB,GACpE7C,EAAYwE,MAAQ3B,EAAEC,cAAcC,MACpCgB,EAAmB,6BAAK7D,GAAN,IAAuBF,oBAmHnC,uBAAGmE,MAAO,CAAEM,WAAY,WAAxB,SACA,6BACE,kBAAClC,GAAD,CACES,KAAK,OACLY,YAAa1D,EAAgBF,YAAYqE,MACzCR,SAAUU,IAEZ,kBAAC/B,GAAD,CACEQ,KAAK,QACLD,MAAO7C,EAAgBF,YAAYqE,MACnCR,SAAUU,MAIhB,kBAACvC,EAAD,KACE,oCACA,kBAACJ,EAAD,CAAQoB,KAAK,SAASD,MAAM,OAAOE,QAASqB,GAA5C,QAGA,kBAAC1C,EAAD,CAAQoB,KAAK,SAASD,MAAM,QAAQE,QAASqB,GAA7C,SAGA,kBAAC1C,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASqB,GAA9C,UAGA,kBAAC1C,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAASqB,GAA9C,cC5BKI,GArKwC,SAAC,GAIjD,IAHLX,EAGI,EAHJA,mBACA7D,EAEI,EAFJA,gBACAyE,EACI,EADJA,cAEMC,EAAwD,SAAC/B,GAC7DkB,EAAmB,6BAAK7D,GAAN,IAAuBZ,UAAWuD,EAAEC,cAAcC,UAEhE8B,EAAyD,SAAChC,GAC9DkB,EAAmB,6BACd7D,GADa,IAEhBX,WAAYsD,EAAEC,cAAcC,UAG1B+B,EAA+D,SAACjC,GACpEkB,EAAmB,6BACd7D,GADa,IAEhBK,iBAAkBsC,EAAEC,cAAcC,UA4CtC,OACE,kBAACG,GAAD,KACE,kBAAC,EAAD,iCACA,kBAAClB,EAAD,KACE,oCACA,kBAACJ,EAAD,CAAQoB,KAAK,SAASD,MAAM,OAAOE,QAAS2B,GAA5C,QAGA,kBAAChD,EAAD,CAAQoB,KAAK,SAASD,MAAM,SAASE,QAAS2B,GAA9C,UAGA,kBAAChD,EAAD,CAAQoB,KAAK,SAASD,MAAM,QAAQE,QAAS2B,GAA7C,UAKF,6BACE,kBAAC,EAAD,eACA,kBAAC5C,EAAD,KACE,qCACA,6BACE,kBAACO,GAAD,CACES,KAAK,OACLY,YAAa1D,EAAgBX,WAC7BsE,SAAUgB,IAEZ,kBAACrC,GAAD,CACEQ,KAAK,QACLD,MAAO7C,EAAgBX,WACvBsE,SAAUgB,KAGd,kBAAC7C,EAAD,KACE,uBAAGmC,MAAO,CAAEM,WAAY,WAAxB,aACA,kBAAC3C,EAAD,CACEkB,KAAK,OACLY,YAAa1D,EAAgBV,cAC7BqE,SA9EsD,SAAChB,GACjEkB,EAAmB,6BACd7D,GADa,IAEhBV,cAAeqD,EAAEC,cAAcC,eAiF/B,6BACE,sCACA,kBAACK,GAAD,CACEJ,KAAK,OACLY,YAAa1D,EAAgBR,YAC7BmE,SAnFwD,SAAChB,GAC/DkB,EAAmB,6BACd7D,GADa,IAEhBR,YAAamD,EAAEC,cAAcC,aAmF7B,6BACE,qCACA,kBAACK,GAAD,CACEJ,KAAK,OACLY,YAAa1D,EAAgBT,aAC7BoE,SArFyD,SAAChB,GAChEkB,EAAmB,6BACd7D,GADa,IAEhBT,aAAcoD,EAAEC,cAAcC,aAsFX,aAAlB4B,EACC,6BACE,kBAACtB,GAAD,MACA,kBAAC,EAAD,qBACA,kBAACrB,EAAD,KACE,oCACA,6BACE,kBAACO,GAAD,CACES,KAAK,OACLY,YAAa1D,EAAgBK,iBAC7BsD,SAAUiB,IAEZ,kBAACtC,GAAD,CACEQ,KAAK,QACLD,MAAO7C,EAAgBK,iBACvBsD,SAAUiB,KAGd,uBAAGX,MAAO,CAAEM,WAAY,WAAxB,aACA,kBAAC3C,EAAD,CACEkB,KAAK,OACLY,YAAa1D,EAAgBM,oBAC7BqD,SAzG4D,SACtEhB,GAEAkB,EAAmB,6BACd7D,GADa,IAEhBM,oBAAqBqC,EAAEC,cAAcC,aAuGjC,sCACA,kBAACK,GAAD,CACEJ,KAAK,OACLY,YAAa1D,EAAgBQ,kBAC7BmD,SAxG4D,SAAChB,GACrEkB,EAAmB,6BACd7D,GADa,IAEhBQ,kBAAmBmC,EAAEC,cAAcC,YAuG/B,qCACA,kBAACK,GAAD,CACEJ,KAAK,OACLY,YAAa1D,EAAgBO,mBAC7BoD,SAxG6D,SACrEhB,GAEAkB,EAAmB,6BACd7D,GADa,IAEhBO,mBAAoBoC,EAAEC,cAAcC,aAuGlC,uCC9JF/C,GAAc,CAClBwE,MAAO,MACPL,MAAO,QACPE,MAAO,WAEHjF,GAAa,CACjBoF,MAAO,MACPL,MAAO,QACPE,MAAO,WAmMMU,GAhMO,WAAM,MAEgBC,mBAAiB,YAFjC,mBAEnBL,EAFmB,KAEJjC,EAFI,OAGgBsC,mBAAiB,QAHjC,mBAGnB7F,EAHmB,KAGJwD,EAHI,OAMoBqC,mBAA2B,CACvEtG,UAAW,QACXC,WAAY,QACZC,UAAW,WACXC,oBAAqB,SAVG,mBAMnBR,EANmB,KAMFmF,EANE,OAcoBwB,mBAA2B,CACvEhG,UAAW,QACXC,WAAY,QACZC,oBAAqB,UACrBI,UAAW,SACXO,YAAa,SACbG,YAAaA,GACbZ,WAAYA,GACZG,WAAY,OACZgB,iBAAkB,OAClBT,WAAY,QACZC,YAAa,QACbP,cAAe,OACfC,aAAc,mBACdC,YAAa,kBACbc,oBAAqB,MACrBC,mBAAoB,kBACpBC,kBAAmB,oBA/BK,mBAcnBR,EAdmB,KAcF6D,EAdE,KA0CpBkB,EAA6B,iIAKb,aAAlBN,EAA+B,gBAAkB,eALlB,oHAW7BO,EAA4B,qCACT/F,EADS,UAG5BgG,EAA8B,yDAEpB9G,EAAgBK,UAFI,gCAGnBL,EAAgBM,WAHG,gCAIpBN,EAAgBO,UAJI,yCAKVP,EAAgBQ,oBALN,eAS9BuG,EAA8B,yDAEpBlF,EAAgBlB,UAFI,gCAGnBkB,EAAgBjB,WAHG,yCAIViB,EAAgBhB,oBAJN,+BAKpBgB,EAAgBZ,UALI,iCAMlBY,EAAgBL,YANE,iDAQtBK,EAAgBF,YAAYwE,MARN,6BAStBtE,EAAgBF,YAAYmE,MATN,6BAUtBjE,EAAgBF,YAAYqE,MAVN,uDAatBnE,EAAgBd,WAAWoF,MAbL,6BActBtE,EAAgBd,WAAW+E,MAdL,6BAetBjE,EAAgBd,WAAWiF,MAfL,uCAiBnBnE,EAAgBX,WAjBG,sCAkBbW,EAAgBK,iBAlBH,gCAmBnBL,EAAgBJ,WAnBG,iCAoBlBI,EAAgBH,YApBE,mCAqBhBG,EAAgBV,cArBA,kCAsBjBU,EAAgBT,aAtBC,iCAuBlBS,EAAgBR,YAvBE,yCAwBVQ,EAAgBM,oBAxBN,wCAyBXN,EAAgBO,mBAzBL,uCA0BZP,EAAgBQ,kBA1BJ,eA8BpC,OACE,kBAACU,EAAD,KACE,kBAACE,EAAD,KACE,2EAEF,kBAACC,EAAD,KACE,kBAAC,EAAD,CACEjD,mBAAoBA,EACpBD,gBAAiBA,GAEE,aAAlBsG,EACC,kBAAC,EAAD,CACEzE,gBAAiBA,EACjBf,cAAeA,IAEG,YAAlBwF,EACF,kBAAC,EAAD,CACEzE,gBAAiBA,EACjBf,cAAeA,IAGjB,kBAAC,EAAD,CACEe,gBAAiBA,EACjBf,cAAeA,MAKvB,kBAACqC,EAAD,KACE,kBAAC,GAAD,CACEkB,iBAAkBA,EAClBC,iBAAkBA,IAGpB,kBAAC,GAAD,CACEa,mBAAoBA,EACpBnF,gBAAiBA,IAGnB,kBAAC,GAAD,CACE6B,gBAAiBA,EACjB6D,mBAAoBA,EACpB3E,WAAYA,GACZY,YAAaA,KAGf,kBAAC,GAAD,CACE+D,mBAAoBA,EACpB7D,gBAAiBA,EACjByE,cAAeA,KAGnB,kBAAC1C,GAAD,KACE,kBAACC,GAAD,KACE,oHAKF,kBAACC,GAAD,KACE,6BACE,kBAACC,GAAD,KAzH6B,0JA4HjC,kBAACF,GAAD,KACE,gIAKF,kBAACC,GAAD,KACE,6BACE,kBAACC,GAAD,KAAO8C,IAET,6BACE,kBAAC9C,GAAD,KAAO+C,IAET,6BACE,kBAAC/C,GAAD,KAAOgD,KAGX,kBAAClD,GAAD,KACE,6EAEF,kBAACC,GAAD,KACE,yBAAKgC,MAAO,CAAEkB,SAAU,eACtB,kBAACjD,GAAD,KAAO6C,KAGX,kBAAC/C,GAAD,KACE,yECjNVoD,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2507499b.chunk.js","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport { collaborator, listStyleObjectI } from '../interfaces'\nimport { ListContainerDivStyle } from '../StyleComponents/ListStyle'\n\ninterface ICollaboratorsListProps {\n  collaboratorsArray: collaborator[]\n  listStyleObject: listStyleObjectI\n  children: JSX.Element\n}\n\nconst CollaboratorsList: React.FC<ICollaboratorsListProps> = ({\n  listStyleObject,\n  collaboratorsArray,\n  children\n}) => {\n  const ListContainerDiv = styled.div`\n    ${ListContainerDivStyle(\n      listStyleObject.listWidth,\n      listStyleObject.listHeight,\n      listStyleObject.direction,\n      listStyleObject.listBackgroundColor\n    )}\n  `\n  return (\n    <ListContainerDiv>\n      {collaboratorsArray.map((collaboratorObj: collaborator) =>\n        React.cloneElement(children, { collaboratorObj: collaboratorObj })\n      )}\n    </ListContainerDiv>\n  )\n}\n\nexport default CollaboratorsList\n","export const ListContainerDivStyle = (\n  listWidth: string = '1100px',\n  listHeight: string = '400px',\n  direction: string = 'vertical',\n  listBackgroundColor: string = '#FFF'\n) => {\n  return `\n  width: ${listWidth};\n  height: ${listHeight};\n  background-color: ${listBackgroundColor};\n  overflow: scroll;\n  display: flex;\n  flex-direction: ${\n    direction === 'vertical'\n      ? 'row'\n      : direction === 'horizontal'\n      ? 'column'\n      : 'row'\n  };\n  flex-wrap: wrap;\n  overflow-x: ${\n    direction === 'none'\n      ? 'hidden'\n      : direction === 'vertical'\n      ? 'hidden'\n      : direction === 'horizontal'\n      ? 'scroll'\n      : 'scroll'\n  };\n  overflow-y: ${\n    direction === 'none'\n      ? 'hidden'\n      : direction === 'vertical'\n      ? 'scroll'\n      : direction === 'horizontal'\n      ? 'hidden'\n      : 'scroll'\n  };\n  `\n}\n","// eslint-disable-next-line no-unused-vars\nimport { borderI } from '../interfaces'\n\nexport const ContainerDivStyle = (\n  cardWidth: string = '300px',\n  cardHeight: string = '150px',\n  borderCard: borderI,\n  cardBackgroundColor: string = '#7EE8FA',\n  imagePosition: string\n): string => {\n  return `\n  width: ${cardWidth};\n  height: ${cardHeight};\n  background-color: ${cardBackgroundColor};\n  display: flex;\n  flex-direction: ${\n    imagePosition === 'left'\n      ? 'row'\n      : imagePosition === 'right'\n      ? 'row-reverse'\n      : imagePosition === 'top'\n      ? 'column'\n      : imagePosition === 'bottom'\n      ? 'column-reverse'\n      : 'row'\n  };\n  align-items: center;\n  justify-content: space-around;\n  margin: 20px;\n  box-sizing: border-box;\n  padding: 10px;\n  border-radius: 5px;\n  border: ${borderCard.width} ${borderCard.style} ${borderCard.color};\n  `\n}\n\nexport const TextDivStyle = (): string => {\n  return `\n  width: 65%;\n  height: 85%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 10px;\n  `\n}\n\nexport const TitlePStyle = (\n  textAlign: string = 'left',\n  titleColor: string = '#000',\n  fontSizeTitle: string = '100%',\n  paddingTitle: string = '0px',\n  marginTitle: string = '0px'\n): string => {\n  return `\n  color: ${titleColor};\n  font-weight: bolder;\n  text-align: ${textAlign};\n  font-size: ${fontSizeTitle};\n  padding: ${paddingTitle};\n  margin: ${marginTitle};\n  `\n}\n\nexport const DescriptionPStyle = (\n  textAlign: string = 'left',\n  descriptionColor: string = '#000',\n  fontSizeDescription: string = '80%',\n  paddingDescription: string = '0px',\n  marginDescription: string = '0px'\n): string => {\n  return `\n  color: ${descriptionColor};\n  text-align: ${textAlign};\n  font-size: ${fontSizeDescription};\n  padding: ${paddingDescription};\n  margin: ${marginDescription};\n  `\n}\n\nexport const ImgDivStyle = (imagePosition: string): string => {\n  return `\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 35%;\n  height: 85%;\n  margin: ${\n    imagePosition === 'left' || imagePosition === 'right'\n      ? '10px'\n      : imagePosition === 'top' || imagePosition === 'bottom'\n      ? '0px'\n      : '10px'\n  };\n  `\n}\n\nexport const ImgStyle = (\n  imageFormat: string = 'circle',\n  borderImage: borderI,\n  imageWidth: string = '100px',\n  imageHeight: string = '100px'\n): string => {\n  return `\n  width: ${imageWidth};\n  height: ${imageHeight};\n  object-fit: cover;\n  border-radius: ${\n    imageFormat === 'circle' ? '50%' : imageFormat === 'square' ? '0%' : '50%'\n  };\n  border: ${borderImage.width} ${borderImage.style} ${borderImage.color};\n  `\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { cardStyleObjectI, collaborator } from '../interfaces'\nimport {\n  ContainerDivStyle,\n  TextDivStyle,\n  TitlePStyle,\n  DescriptionPStyle,\n  ImgDivStyle,\n  ImgStyle\n} from '../StyleComponents/CardsStyle'\n\nexport interface ICardCompleteProps {\n  collaboratorObj?: collaborator\n  cardStyleObject: cardStyleObjectI\n  imagePosition: string\n}\n\nconst CardComplete: React.FC<ICardCompleteProps> = ({\n  collaboratorObj = {},\n  cardStyleObject,\n  imagePosition\n}) => {\n  const ContainerDiv = styled.div`\n    ${ContainerDivStyle(\n      cardStyleObject.cardWidth,\n      cardStyleObject.cardHeight,\n      cardStyleObject.borderCard,\n      cardStyleObject.cardBackgroundColor,\n      imagePosition\n    )}\n  `\n  const TextDiv = styled.div`\n    ${TextDivStyle()}\n  `\n  const TitleP = styled.p`\n    ${TitlePStyle(\n      cardStyleObject.textAlign,\n      cardStyleObject.titleColor,\n      cardStyleObject.fontSizeTitle,\n      cardStyleObject.paddingTitle,\n      cardStyleObject.marginTitle\n    )}\n  `\n  const DescriptionP = styled.p`\n    ${DescriptionPStyle(\n      cardStyleObject.textAlign,\n      cardStyleObject.descriptionColor,\n      cardStyleObject.fontSizeDescription,\n      cardStyleObject.paddingDescription,\n      cardStyleObject.marginDescription\n    )}\n  `\n  const ImgDiv = styled.div`\n    ${ImgDivStyle(imagePosition)}\n  `\n  const Img = styled.img`\n    ${ImgStyle(\n      cardStyleObject.imageFormat,\n      cardStyleObject.borderImage,\n      cardStyleObject.imageWidth,\n      cardStyleObject.imageHeight\n    )}\n  `\n  return (\n    <ContainerDiv>\n      <ImgDiv>\n        <Img src={collaboratorObj.image} alt='' />\n      </ImgDiv>\n      <TextDiv>\n        <TitleP>{collaboratorObj.title}</TitleP>\n        {collaboratorObj.description ? (\n          <DescriptionP>{collaboratorObj.description}</DescriptionP>\n        ) : null}\n      </TextDiv>\n    </ContainerDiv>\n  )\n}\n\nexport default CardComplete\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { cardStyleObjectI, collaborator } from '../interfaces'\nimport {\n  ContainerDivStyle,\n  TextDivStyle,\n  TitlePStyle,\n  ImgDivStyle,\n  ImgStyle\n} from '../StyleComponents/CardsStyle'\n\nexport interface ICardMinimalProps {\n  collaboratorObj?: collaborator\n  cardStyleObject: cardStyleObjectI\n  imagePosition: string\n}\n\nconst CardMinimal: React.FC<ICardMinimalProps> = ({\n  collaboratorObj = {\n    image:\n      'https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixlib=rb-1.2.1&auto=format&fit=crop&w=639&q=80',\n    title: 'Daenerys Targaryen',\n    description: 'Learning to haul'\n  },\n  cardStyleObject,\n  imagePosition\n}) => {\n  const ContainerDiv = styled.div`\n    ${ContainerDivStyle(\n      cardStyleObject.cardWidth,\n      cardStyleObject.cardHeight,\n      cardStyleObject.borderCard,\n      cardStyleObject.cardBackgroundColor,\n      imagePosition\n    )}\n  `\n  const ImgDiv = styled.div`\n    ${ImgDivStyle(imagePosition)}\n  `\n  const Img = styled.img`\n    ${ImgStyle(\n      cardStyleObject.imageFormat,\n      cardStyleObject.borderImage,\n      cardStyleObject.imageWidth,\n      cardStyleObject.imageHeight\n    )}\n  `\n  const TextDiv = styled.div`\n    ${TextDivStyle()}\n  `\n  const TitleP = styled.p`\n    ${TitlePStyle(cardStyleObject.textAlign, cardStyleObject.titleColor)}\n  `\n  return (\n    <ContainerDiv>\n      <ImgDiv>\n        <Img src={collaboratorObj.image} alt='' />\n      </ImgDiv>\n      <TextDiv>\n        <TitleP>{collaboratorObj.title}</TitleP>\n        {/* <DescriptionP>{collaboratorObj.description}</DescriptionP> */}\n      </TextDiv>\n    </ContainerDiv>\n  )\n}\n\nexport default CardMinimal\n","import styled from 'styled-components'\n\nexport const AppDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  background-color: #ecf0f5;\n  p {\n    color: #000;\n    margin: 0.5rem 0rem;\n  }\n`\nexport const AppTitleDiv = styled.div`\n  width: 100vw;\n  height: 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport const ComponentDisplayDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport const CustomizationDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 20px 0px;\n`\nexport const CardTypeDiv = styled.div`\n  width: 20%;\n  height: 250px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  margin-left: 20px;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const CardTypeContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const TitleP = styled.p`\n  color: #000;\n  font-weight: bolder;\n`\nexport const CardTypeButtonDiv = styled.p`\n  display: flex;\n  flex-direction: row;\n`\nexport const Button = styled.button`\n  height: 25px;\n  width: 80px;\n  align-text: center;\n  margin-left: 0.5rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const SizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin-left: 10px;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const FlexRowDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n`\n","import { collaborator } from '../interfaces'\n\nconst collaboratorsArray: collaborator[] = [\n  {\n    image:\n      'https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixlib=rb-1.2.1&auto=format&fit=crop&w=639&q=80',\n    title: 'Daenerys Targaryen',\n    description: 'Learning to howl'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1561037404-61cd46aa615b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    title: 'Jhon Snow',\n    description: 'Loves playing catch'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1583511655826-05700d52f4d9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80',\n    title: 'Arya Stark',\n    description: 'Has a nice wardrobe'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1517423440428-a5a00ad493e8?ixlib=rb-1.2.1&auto=format&fit=crop&w=687&q=80',\n    title: 'Tyrion Lannister',\n    description: 'Feels superior'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1518020382113-a7e8fc38eac9?ixlib=rb-1.2.1&auto=format&fit=crop&w=660&q=80',\n    title: 'Khal Drogo',\n    description: 'Scared of hes own shadow'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1510771463146-e89e6e86560e?ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80',\n    title: 'Joffrey Baratheon',\n    description: 'Loves smelling the flowers'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1543466835-00a7907e9de1?ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80',\n    title: 'Theon Greyjoy',\n    description: 'Loves going for walks in the park'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1559190394-df5a28aab5c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80',\n    title: 'Ramsay Bolton',\n    description: 'Enjoys the wind while riding the car'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1537151769678-eb003fb3a153?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80',\n    title: 'Gregor Clegane',\n    description: 'Loves taking naps'\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1558788353-f76d92427f16?ixlib=rb-1.2.1&auto=format&fit=crop&w=678&q=80',\n    title: 'Petyr Baelish',\n    description: 'Smiles a lot'\n  }\n]\n\nexport default collaboratorsArray\n","import styled from 'styled-components'\n\nexport const CodeSnippet = styled.p`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-content: space-around;\n  background-color: #fff;\n`\nexport const Snippet = styled.div`\n  width: 55vw;\n  height: 100%;\n  margin: 1rem auto;\n`\nexport const CodeDiv = styled.div`\n  width: 55%;\n  background-color: #000;\n  border-radius: 4px;\n  margin: 0px auto;\n`\nexport const Code = styled.code`\n  background-color: #000;\n  color: #fff;\n  border-radius: 3px;\n  font-family: courier;\n  padding: 0 3px;\n`\n","import styled from 'styled-components'\n\nexport const ComponentDiv = styled.div`\n  width: 20%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const ComponentTitleP = styled.p`\n  color: #000;\n  margin: 0px;\n  font-weight: bolder;\n`\nexport const ComponentSizeDiv = styled.div`\n  height: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin: 0px;\n  padding: 0px;\n`\nexport const ComponentSizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin-left: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const WidthHeightDiv = styled.div``\nexport const ComponentColorDiv = styled.div`\n  height: 25px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin: 0px;\n  margin-left: 10px;\n`\nexport const ColorTextInput = styled.input`\n  width: 80px;\n  height: 25px;\n  margin-left: 0.5rem;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const ColorInput = styled.input`\n  width: 25px;\n  height: 25px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\n","import React, { Dispatch, MouseEventHandler, SetStateAction } from 'react'\nimport { ComponentDiv } from '../style/ComponentContainerStyle'\nimport {\n  Button,\n  CardTypeButtonDiv,\n  CardTypeContainerDiv,\n  TitleP\n} from '../style/TypeCardStyle'\n\ninterface ITypeOfCardProps {\n  setCardComponent: Dispatch<SetStateAction<string>>\n  setImagePosition: Dispatch<SetStateAction<string>>\n}\n\nconst TypeOfCard: React.FC<ITypeOfCardProps> = ({\n  setCardComponent,\n  setImagePosition\n}) => {\n  const handleTypeOfCardComplete: MouseEventHandler<HTMLButtonElement> = () => {\n    setCardComponent('complete')\n  }\n  const handleTypeOfCardMinimal: MouseEventHandler<HTMLButtonElement> = () => {\n    setCardComponent('minimal')\n  }\n  const handleImagePosition: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setImagePosition(e.currentTarget.value)\n  }\n  return (\n    <ComponentDiv>\n      <CardTypeContainerDiv>\n        <TitleP>Type of Card:</TitleP>\n        <CardTypeButtonDiv>\n          <Button type='button' onClick={handleTypeOfCardComplete}>\n            Complete\n          </Button>\n          <Button type='button' onClick={handleTypeOfCardMinimal}>\n            Minimal\n          </Button>\n        </CardTypeButtonDiv>\n      </CardTypeContainerDiv>\n      <CardTypeContainerDiv>\n        <TitleP>Image position:</TitleP>\n        <CardTypeButtonDiv>\n          <Button type='button' value='left' onClick={handleImagePosition}>\n            Left\n          </Button>\n          <Button type='button' value='right' onClick={handleImagePosition}>\n            Right\n          </Button>\n        </CardTypeButtonDiv>\n        <CardTypeButtonDiv>\n          <Button type='button' value='top' onClick={handleImagePosition}>\n            Top\n          </Button>\n          <Button type='button' value='bottom' onClick={handleImagePosition}>\n            Bottom\n          </Button>\n        </CardTypeButtonDiv>\n      </CardTypeContainerDiv>\n    </ComponentDiv>\n  )\n}\nexport default TypeOfCard\n","import styled from 'styled-components'\n\nexport const CardDiv = styled.div`\n  width: 20%;\n  height: auto;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betwin;\n  padding: 1% 1%;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: #6fbdfa;\n`\nexport const CardSizeInput = styled.input`\n  height: 25px;\n  width: 50px;\n  margin: 0.5rem 0.5rem;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const LongInput = styled.input`\n  height: 25px;\n  width: 150px;\n  margin-left: 10px;\n  margin-right: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  background-color: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n`\nexport const Hr = styled.hr`\n  margin: 10px;\n  background-color: #000;\n`\n","import React, {\n  ChangeEventHandler,\n  Dispatch,\n  MouseEventHandler,\n  SetStateAction\n} from 'react'\nimport { listStyleObjectI } from '../interfaces'\nimport { CardSizeInput } from '../style/CardStyle'\nimport {\n  ColorInput,\n  ColorTextInput,\n  ComponentDiv\n} from '../style/ComponentContainerStyle'\nimport { Button, FlexRowDiv, TitleP } from '../style/TypeCardStyle'\n\ninterface IContainerPropertiesProps {\n  setListStyleObject: Dispatch<SetStateAction<listStyleObjectI>>\n  listStyleObject: listStyleObjectI\n}\n\nconst ContainerProperties: React.FC<IContainerPropertiesProps> = ({\n  setListStyleObject,\n  listStyleObject\n}) => {\n  // List functions\n  const handleListWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, listWidth: e.target.value })\n  }\n  const handleListHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, listHeight: e.target.value })\n  }\n  const handleListBackgroundColor: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setListStyleObject({\n      ...listStyleObject,\n      listBackgroundColor: e.target.value\n    })\n  }\n  const handleDirection: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setListStyleObject({ ...listStyleObject, direction: e.currentTarget.value })\n  }\n\n  return (\n    <ComponentDiv>\n      <TitleP>Properties for the container:</TitleP>\n      <FlexRowDiv>\n        <p>Width </p>\n        <CardSizeInput\n          placeholder={listStyleObject.listWidth}\n          onChange={handleListWidth}\n        />\n        <p>Height</p>\n        <CardSizeInput\n          type='text'\n          placeholder={listStyleObject.listHeight}\n          onChange={handleListHeight}\n        />\n      </FlexRowDiv>\n      <div>\n        <p>Display direction</p>\n        <Button type='button' value='vertical' onClick={handleDirection}>\n          Vertical\n        </Button>\n        <Button type='button' value='horizontal' onClick={handleDirection}>\n          Horizontal\n        </Button>\n        <Button type='button' value='none' onClick={handleDirection}>\n          None\n        </Button>\n      </div>\n      <div>\n        <p>Background color:</p>\n        <div>\n          <ColorTextInput\n            type='text'\n            placeholder={listStyleObject.listBackgroundColor}\n            onChange={handleListBackgroundColor}\n          />\n          <ColorInput\n            type='color'\n            value={listStyleObject.listBackgroundColor}\n            placeholder={listStyleObject.listBackgroundColor}\n            onChange={handleListBackgroundColor}\n          />\n        </div>\n      </div>\n    </ComponentDiv>\n  )\n}\n\nexport default ContainerProperties\n","import React, {\n  ChangeEventHandler,\n  Dispatch,\n  MouseEventHandler,\n  SetStateAction\n} from 'react'\nimport { borderI, cardStyleObjectI } from '../interfaces'\nimport { CardDiv, CardSizeInput, Hr } from '../style/CardStyle'\nimport { ColorInput, ColorTextInput } from '../style/ComponentContainerStyle'\nimport { Button, FlexRowDiv, SizeInput, TitleP } from '../style/TypeCardStyle'\ninterface ICardPropertiesProps {\n  cardStyleObject: cardStyleObjectI\n  setCardStyleObject: Dispatch<SetStateAction<cardStyleObjectI>>\n  borderCard: borderI\n  borderImage: borderI\n}\n\nconst CardProperties: React.FC<ICardPropertiesProps> = ({\n  cardStyleObject,\n  setCardStyleObject,\n  borderCard,\n  borderImage\n}) => {\n  // Card functions\n  const handleCardWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, cardWidth: e.target.value })\n  }\n  const handleCardHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, cardHeight: e.target.value })\n  }\n  const handleCardBackgroundColor: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      cardBackgroundColor: e.target.value\n    })\n  }\n  const handleImageFormat: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageFormat: e.currentTarget.value\n    })\n  }\n  const handleImageWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageWidth: e.currentTarget.value\n    })\n  }\n  const handleImageHeight: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      imageHeight: e.currentTarget.value\n    })\n  }\n  const handleBorderCardWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderCard.width = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderCardStyle: MouseEventHandler<HTMLButtonElement> = (e) => {\n    borderCard.style = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderCardColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderCard.color = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderCard })\n  }\n  const handleBorderImageWidth: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderImage.width = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n  const handleBorderImageStyle: MouseEventHandler<HTMLButtonElement> = (e) => {\n    borderImage.style = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n  const handleBorderImageColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    borderImage.color = e.currentTarget.value\n    setCardStyleObject({ ...cardStyleObject, borderImage })\n  }\n  return (\n    <CardDiv>\n      <TitleP>Properties for the card:</TitleP>\n      <div>\n        <FlexRowDiv>\n          <p>Width</p>\n          <CardSizeInput\n            type='text'\n            placeholder={cardStyleObject.cardWidth}\n            onChange={handleCardWidth}\n          />\n          <p>Height</p>\n          <CardSizeInput\n            type='text'\n            placeholder={cardStyleObject.cardHeight}\n            onChange={handleCardHeight}\n          />\n        </FlexRowDiv>\n        <FlexRowDiv>\n          <p>Background color:</p>\n          <div>\n            <ColorTextInput\n              type='text'\n              placeholder={cardStyleObject.cardBackgroundColor}\n              onChange={handleCardBackgroundColor}\n            />\n            <ColorInput\n              type='color'\n              value={cardStyleObject.cardBackgroundColor}\n              onChange={handleCardBackgroundColor}\n            />\n          </div>\n        </FlexRowDiv>\n        <p>Card border:</p>\n        <FlexRowDiv>\n          <p>Width</p>\n          <SizeInput\n            type='text'\n            placeholder={cardStyleObject.borderCard.width}\n            onChange={handleBorderCardWidth}\n          />\n          <p style={{ marginLeft: '0.5rem' }}>Color</p>\n          <div>\n            <ColorTextInput\n              type='text'\n              placeholder={cardStyleObject.borderCard.color}\n              onChange={handleBorderCardColor}\n            />\n            <ColorInput\n              type='color'\n              value={cardStyleObject.borderCard.color}\n              onChange={handleBorderCardColor}\n            />\n          </div>\n        </FlexRowDiv>\n        <FlexRowDiv>\n          <p>Style</p>\n          <Button type='button' value='none' onClick={handleBorderCardStyle}>\n            None\n          </Button>\n          <Button type='button' value='solid' onClick={handleBorderCardStyle}>\n            Solid\n          </Button>\n          <Button type='button' value='dashed' onClick={handleBorderCardStyle}>\n            Dashed\n          </Button>\n          <Button type='button' value='double' onClick={handleBorderCardStyle}>\n            Double\n          </Button>\n        </FlexRowDiv>\n      </div>\n      <Hr />\n      <TitleP>Properties for the image:</TitleP>\n      <div>\n        <FlexRowDiv>\n          <p>Format:</p>\n          <Button type='button' value='circle' onClick={handleImageFormat}>\n            circle\n          </Button>\n          <Button type='button' value='square' onClick={handleImageFormat}>\n            Square\n          </Button>\n        </FlexRowDiv>\n        <FlexRowDiv>\n          <p>Width</p>\n          <CardSizeInput\n            type='text'\n            placeholder={cardStyleObject.imageWidth}\n            onChange={handleImageWidth}\n          />\n          <p>Height</p>\n          <CardSizeInput\n            type='text'\n            placeholder={cardStyleObject.imageHeight}\n            onChange={handleImageHeight}\n          />\n        </FlexRowDiv>\n        <p>Border</p>\n        <FlexRowDiv>\n          <p>Width</p>\n          <SizeInput\n            type='text'\n            placeholder={cardStyleObject.borderImage.width}\n            onChange={handleBorderImageWidth}\n          />\n          <p style={{ marginLeft: '0.5rem' }}>Color</p>\n          <div>\n            <ColorTextInput\n              type='text'\n              placeholder={cardStyleObject.borderImage.color}\n              onChange={handleBorderImageColor}\n            />\n            <ColorInput\n              type='color'\n              value={cardStyleObject.borderImage.color}\n              onChange={handleBorderImageColor}\n            />\n          </div>\n        </FlexRowDiv>\n        <FlexRowDiv>\n          <p>Style</p>\n          <Button type='button' value='none' onClick={handleBorderImageStyle}>\n            None\n          </Button>\n          <Button type='button' value='solid' onClick={handleBorderImageStyle}>\n            Solid\n          </Button>\n          <Button type='button' value='dashed' onClick={handleBorderImageStyle}>\n            Dashed\n          </Button>\n          <Button type='button' value='double' onClick={handleBorderImageStyle}>\n            Double\n          </Button>\n        </FlexRowDiv>\n      </div>\n    </CardDiv>\n  )\n}\nexport default CardProperties\n","import React, {\n  ChangeEventHandler,\n  Dispatch,\n  MouseEventHandler,\n  SetStateAction\n} from 'react'\nimport { cardStyleObjectI } from '../interfaces'\nimport { CardDiv, Hr, LongInput } from '../style/CardStyle'\nimport { ColorInput, ColorTextInput } from '../style/ComponentContainerStyle'\nimport { Button, FlexRowDiv, SizeInput, TitleP } from '../style/TypeCardStyle'\n\ninterface ITextPropertiesProps {\n  setCardStyleObject: Dispatch<SetStateAction<cardStyleObjectI>>\n  cardStyleObject: cardStyleObjectI\n  cardComponent: string\n}\n\nconst TextProperties: React.FC<ITextPropertiesProps> = ({\n  setCardStyleObject,\n  cardStyleObject,\n  cardComponent\n}) => {\n  const handleTextAlign: MouseEventHandler<HTMLButtonElement> = (e) => {\n    setCardStyleObject({ ...cardStyleObject, textAlign: e.currentTarget.value })\n  }\n  const handleTitleColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      titleColor: e.currentTarget.value\n    })\n  }\n  const handleDescriptionColor: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      descriptionColor: e.currentTarget.value\n    })\n  }\n  const handleFontSizeTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      fontSizeTitle: e.currentTarget.value\n    })\n  }\n  const handleMarginTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      marginTitle: e.currentTarget.value\n    })\n  }\n  const handlePaddingTitle: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      paddingTitle: e.currentTarget.value\n    })\n  }\n  const handleFontSizeDescription: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      fontSizeDescription: e.currentTarget.value\n    })\n  }\n  const handleMarginDescription: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      marginDescription: e.currentTarget.value\n    })\n  }\n  const handlePaddingDescription: ChangeEventHandler<HTMLInputElement> = (\n    e\n  ) => {\n    setCardStyleObject({\n      ...cardStyleObject,\n      paddingDescription: e.currentTarget.value\n    })\n  }\n\n  return (\n    <CardDiv>\n      <TitleP>Properties for the text:</TitleP>\n      <FlexRowDiv>\n        <p>Align</p>\n        <Button type='button' value='left' onClick={handleTextAlign}>\n          Left\n        </Button>\n        <Button type='button' value='center' onClick={handleTextAlign}>\n          Center\n        </Button>\n        <Button type='button' value='right' onClick={handleTextAlign}>\n          Right\n        </Button>\n      </FlexRowDiv>\n\n      <div>\n        <TitleP>Title:</TitleP>\n        <FlexRowDiv>\n          <p>Color:</p>\n          <div>\n            <ColorTextInput\n              type='text'\n              placeholder={cardStyleObject.titleColor}\n              onChange={handleTitleColor}\n            />\n            <ColorInput\n              type='color'\n              value={cardStyleObject.titleColor}\n              onChange={handleTitleColor}\n            />\n          </div>\n          <FlexRowDiv>\n            <p style={{ marginLeft: '0.5rem' }}>Font size</p>\n            <SizeInput\n              type='text'\n              placeholder={cardStyleObject.fontSizeTitle}\n              onChange={handleFontSizeTitle}\n            />\n          </FlexRowDiv>\n        </FlexRowDiv>\n      </div>\n\n      <div>\n        <p>Padding</p>\n        <LongInput\n          type='text'\n          placeholder={cardStyleObject.marginTitle}\n          onChange={handleMarginTitle}\n        />\n      </div>\n      <div>\n        <p>Margin</p>\n        <LongInput\n          type='text'\n          placeholder={cardStyleObject.paddingTitle}\n          onChange={handlePaddingTitle}\n        />\n      </div>\n\n      {cardComponent === 'complete' ? (\n        <div>\n          <Hr />\n          <TitleP>Description:</TitleP>\n          <FlexRowDiv>\n            <p>Color</p>\n            <div>\n              <ColorTextInput\n                type='text'\n                placeholder={cardStyleObject.descriptionColor}\n                onChange={handleDescriptionColor}\n              />\n              <ColorInput\n                type='color'\n                value={cardStyleObject.descriptionColor}\n                onChange={handleDescriptionColor}\n              />\n            </div>\n            <p style={{ marginLeft: '0.5rem' }}>Font size</p>\n            <SizeInput\n              type='text'\n              placeholder={cardStyleObject.fontSizeDescription}\n              onChange={handleFontSizeDescription}\n            />\n          </FlexRowDiv>\n          <p>Padding</p>\n          <LongInput\n            type='text'\n            placeholder={cardStyleObject.marginDescription}\n            onChange={handleMarginDescription}\n          />\n          <p>Margin</p>\n          <LongInput\n            type='text'\n            placeholder={cardStyleObject.paddingDescription}\n            onChange={handlePaddingDescription}\n          />\n        </div>\n      ) : (\n        <></>\n      )}\n    </CardDiv>\n  )\n}\nexport default TextProperties\n","import { CollaboratorsList } from 'react-component-collaborators'\nimport { CardComplete } from 'react-component-collaborators'\nimport { CardMinimal } from 'react-component-collaborators'\n\nimport React from 'react'\nimport { useState } from 'react'\nimport {\n  AppDiv,\n  AppTitleDiv,\n  ComponentDisplayDiv,\n  CustomizationDiv\n} from './style/TypeCardStyle'\nimport collaboratorsArray from './mock/collaboratorsArray'\nimport { cardStyleObjectI, listStyleObjectI } from './interfaces'\nimport { Code, CodeDiv, CodeSnippet, Snippet } from './style/CodeSnippetTyle'\nimport TypeOfCard from './components/TypeOfCard'\nimport ContainerProperties from './components/ContainerProperties'\nimport CardProperties from './components/CardProperties'\nimport TextProperties from './components/TextProperties'\nconst borderImage = {\n  width: '4px',\n  style: 'solid',\n  color: '#E8C3C9'\n}\nconst borderCard = {\n  width: '4px',\n  style: 'solid',\n  color: '#E8C3C9'\n}\n\nconst App: React.FC = () => {\n  // Card component\n  const [cardComponent, setCardComponent] = useState<string>('complete')\n  const [imagePosition, setImagePosition] = useState<string>('left')\n\n  // List state\n  const [listStyleObject, setListStyleObject] = useState<listStyleObjectI>({\n    listWidth: '700px',\n    listHeight: '400px',\n    direction: 'vertical',\n    listBackgroundColor: '#FFF'\n  })\n\n  // Card state\n  const [cardStyleObject, setCardStyleObject] = useState<cardStyleObjectI>({\n    cardWidth: '300px',\n    cardHeight: '150px',\n    cardBackgroundColor: '#7EE8FA',\n    textAlign: 'center',\n    imageFormat: 'circle',\n    borderImage: borderImage,\n    borderCard: borderCard,\n    titleColor: '#000',\n    descriptionColor: '#000',\n    imageWidth: '100px',\n    imageHeight: '100px',\n    fontSizeTitle: '100%',\n    paddingTitle: '0px 0px 20px 0px',\n    marginTitle: '0px 0px 0px 0px',\n    fontSizeDescription: '80%',\n    paddingDescription: '0px 0px 0px 0px',\n    marginDescription: '0px 0px 0px 0px'\n  })\n\n  // Code snippet\n  const collaborarorsArraySnippet: string = `\n  collaboratorsArray = [{\n    image: 'mandatory url',\n    title: 'mandatory title',\n    description: 'optional description'\n  }, {}, ...];\n  `\n  const basicStructureSnippet: string = `\n  <CollaboratorsList \n    collaboratorsArray={collaboratorsArray} \n    listStyleObject={listStyleObject}\n  >\n    ${cardComponent === 'complete' ? '<CardComplete' : '<CardMinimal'} \n    cardStyleObject={cardStyleObject} \n    imagePosition={imagePosition}\n    />\n  </CollaboratorsList>\n  `\n  const imagePositionSnippet: string = `\n  const imagePosition = '${imagePosition}';\n  `\n  const listStyleObjectSnippet: string = `\n  const listStyleObject = {\n    listWidth: '${listStyleObject.listWidth}',\n    listHeight: '${listStyleObject.listHeight}', \n    direction: '${listStyleObject.direction}',\n    listBackgroundColor: '${listStyleObject.listBackgroundColor}'\n  };\n  `\n\n  const cardStyleObjectSnippet: string = `\n  const cardStyleObject = {\n    cardWidth: '${cardStyleObject.cardWidth}',\n    cardHeight: '${cardStyleObject.cardHeight}',\n    cardBackgroundColor: '${cardStyleObject.cardBackgroundColor}',\n    textAlign: '${cardStyleObject.textAlign}',\n    imageFormat: '${cardStyleObject.imageFormat}',\n    borderImage: {\n      width: '${cardStyleObject.borderImage.width}',\n      style: '${cardStyleObject.borderImage.style}',\n      color: '${cardStyleObject.borderImage.color}'\n    },\n    borderCard: {\n      width: '${cardStyleObject.borderCard.width}',\n      style: '${cardStyleObject.borderCard.style}',\n      color: '${cardStyleObject.borderCard.color}'\n    },\n    titleColor: '${cardStyleObject.titleColor}',\n    descriptionColor: '${cardStyleObject.descriptionColor}',\n    imageWidth: '${cardStyleObject.imageWidth}',\n    imageHeight: '${cardStyleObject.imageHeight}',\n    fontSizeTitle: '${cardStyleObject.fontSizeTitle}',\n    paddingTitle: '${cardStyleObject.paddingTitle}',\n    marginTitle: '${cardStyleObject.marginTitle}',\n    fontSizeDescription: '${cardStyleObject.fontSizeDescription}',\n    paddingDescription: '${cardStyleObject.paddingDescription}',\n    marginDescription: '${cardStyleObject.marginDescription}'\n  };\n  `\n\n  return (\n    <AppDiv>\n      <AppTitleDiv>\n        <h1>React Customizable Collaborators Component</h1>\n      </AppTitleDiv>\n      <ComponentDisplayDiv>\n        <CollaboratorsList\n          collaboratorsArray={collaboratorsArray}\n          listStyleObject={listStyleObject}\n        >\n          {cardComponent === 'complete' ? (\n            <CardComplete\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          ) : cardComponent === 'minimal' ? (\n            <CardMinimal\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          ) : (\n            <CardComplete\n              cardStyleObject={cardStyleObject}\n              imagePosition={imagePosition}\n            />\n          )}\n        </CollaboratorsList>\n      </ComponentDisplayDiv>\n      <CustomizationDiv>\n        <TypeOfCard\n          setCardComponent={setCardComponent}\n          setImagePosition={setImagePosition}\n        />\n\n        <ContainerProperties\n          setListStyleObject={setListStyleObject}\n          listStyleObject={listStyleObject}\n        />\n\n        <CardProperties\n          cardStyleObject={cardStyleObject}\n          setCardStyleObject={setCardStyleObject}\n          borderCard={borderCard}\n          borderImage={borderImage}\n        />\n\n        <TextProperties\n          setCardStyleObject={setCardStyleObject}\n          cardStyleObject={cardStyleObject}\n          cardComponent={cardComponent}\n        />\n      </CustomizationDiv>\n      <CodeSnippet>\n        <Snippet>\n          <p>\n            In order for this component to work, your collaborators array should\n            look like this:\n          </p>\n        </Snippet>\n        <CodeDiv>\n          <pre>\n            <Code>{collaborarorsArraySnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <Snippet>\n          <p>\n            Once you are happy with the result, just copy and paste the\n            following variables with the styles:\n          </p>\n        </Snippet>\n        <CodeDiv>\n          <pre>\n            <Code>{imagePositionSnippet}</Code>\n          </pre>\n          <pre>\n            <Code>{listStyleObjectSnippet}</Code>\n          </pre>\n          <pre>\n            <Code>{cardStyleObjectSnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <Snippet>\n          <p>Finally your component should look like this:</p>\n        </Snippet>\n        <CodeDiv>\n          <pre style={{ wordWrap: 'break-word' }}>\n            <Code>{basicStructureSnippet}</Code>\n          </pre>\n        </CodeDiv>\n        <Snippet>\n          <p>I hope you find this component useful!</p>\n        </Snippet>\n      </CodeSnippet>\n    </AppDiv>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}